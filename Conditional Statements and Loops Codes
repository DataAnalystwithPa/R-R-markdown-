write a loop 
#Conditional statement R syntax 
If(condition) {
Expression 
}
else if (condition) {
}
else {
expression 
}

#example 
price_consulting<-function(hours,client){
  if (client=="public"){
    price<-40*hours*0.98
  }
  else if (client=="private"){
    price<-40*hours*0.95
  }
  else if (client=="overseas"){
   price<-40*hours*1
  }
  return(price)
}
price_consulting(30, "public")

#loops in R 
#syntax 
For (i in a:b) 
{ expression/sequential instructions
}
#need: 
Loop index i: to check the condition and determine when to stop 
Range of loop: starting and ending of the index
Note: sometimes will need to create a null variable before loop using var+NULL 
Note: make sure loop index is referred inside of the loop 
#example 
myx=NULL 
For(n in 1:10)
{
Myx[n]=n^2
}
myx 
#example: use a for loop to fin the sum of the first 100 squares: is from 1 to 100 and calculate total 
X=NULL
For(n in 1:100)
{
X[i]=i^2
}
sum(X)

#double loop in R
#example 
Pred.subs <- function(x)
{
largest=NULL
for (I in 1:nrow(x))
	{largest[i] <- x{i, 1]
For (j in 1:ncol (x))
{ 
	If (x[i , j] > largest [ i ] )
		{largest [i] = x[i,j]}}
}
	return(largest)
}
A<- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, byrow=TRUE
Pre.subs(A)
largest [i] <- x


if-else statement in R 
Ifelse(a.b.c)
-	The function return either b or c 
-	a: logic expression with a value of TRUE or FALSE (condition)
-	b: if a return TRUE, do b expression 
-	c: if a return FALSE, do c expression 
-	#example 
Ifelse(3>4, x<-5, x<-6)
